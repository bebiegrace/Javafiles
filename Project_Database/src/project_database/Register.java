/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project_database;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author 1styrGroupB
 */
public class Register extends javax.swing.JFrame {

    /**
     * Creates new form Register
     */
    My_Connection mycon;
    
   
     ButtonGroup bg;
    private String query;
    private String registerQuery;
    
    public Register() {
        initComponents();
        mycon=new My_Connection();
        this.setLocationRelativeTo(null);
         
        
    }
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        Name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Address = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Reset = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Email_id = new javax.swing.JTextField();
        Mobilenum = new javax.swing.JTextField();
        Register = new javax.swing.JButton();
        Confirmpassword = new javax.swing.JPasswordField();
        Password = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        Gender = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 204, 102));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        Name.setText("Enter User Name");
        Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NameActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 255, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Name/Username");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 255, 204));
        jLabel3.setText("Address");

        Address.setText("EnterAddress");
        Address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddressActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 255, 204));
        jLabel4.setText("Password");

        Reset.setBackground(new java.awt.Color(153, 255, 204));
        Reset.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sign Up here!");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(220, 220, 220))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 255, 204));
        jLabel5.setText("Confirm Password");

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 255, 204));
        jLabel6.setText("Email_id");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 255, 204));
        jLabel7.setText("Mobile Number");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(153, 255, 204));
        jLabel8.setText("Age");

        Email_id.setText("Enter Email Id");

        Mobilenum.setText("Enter Mobile Number");
        Mobilenum.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                MobilenumKeyTyped(evt);
            }
        });

        Register.setBackground(new java.awt.Color(153, 255, 204));
        Register.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        Confirmpassword.setText("ConfirmPassword");

        Password.setText("MyPassword");
        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 255, 204));
        jLabel10.setText("All Registered Users");
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        Gender.setText("Male/Female");

        Age.setText("Enter Your Age");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(153, 255, 204));
        jLabel9.setText("Gender");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Address, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Name, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Password, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirmpassword, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE))
                        .addComponent(Email_id, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Mobilenum, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Register))
                        .addGap(119, 119, 119))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Address, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Confirmpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Email_id, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(Mobilenum, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(Gender, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(55, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                                .addGap(39, 39, 39))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Register, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67)
                        .addComponent(Reset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(572, 572, 572))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NameActionPerformed

    private void AddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AddressActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        Name.setText("");
        Address.setText("");
        Password.setText("");
        Confirmpassword.setText("");
        Email_id.setText("");
        Age.setText("");
        Gender.setText("");
        Mobilenum.setText("");

    }//GEN-LAST:event_ResetActionPerformed

        public boolean verifyFields()
    {
        String name=Name.getText();
        String address=Address.getText();
        String password=String.valueOf(Password.getText());
        String conpassword=String.valueOf(Confirmpassword.getText());
        String email_id=Email_id.getText();
        String mobilenum=Mobilenum.getText();
        String gender= Gender.getText();
        String age= Age.getText();
        // to check empty fields
        
         if (name.trim().equals("") || name.trim().equals("") ||
            address.trim().equals("") || address.trim().equals("") ||
            password.trim().equals("") ||  password.trim().equals("") ||
            conpassword.trim().equals("") || conpassword.trim().equals("") ||
            email_id.trim().equals("") || email_id.trim().equals("") ||
            mobilenum.trim().equals("") ||  mobilenum.trim().equals("") ||
            gender.trim().equals("") ||  gender.trim().equals("") ||
            age.trim().equals("") ||  age.trim().equals(""))
             
             return false;
            
        if (name.equals("")){
              JOptionPane.showMessageDialog(null, " You should enter your name!" );
                 return false;
         }
         else if (address.equals("")){
              JOptionPane.showMessageDialog(null, " You should enter your address!" );
               return false;
         }
         else if (password.equals("")){
              JOptionPane.showMessageDialog(null, "  Enter your password!" );
               return false;
         }
         else if (conpassword.equals("")){
              JOptionPane.showMessageDialog(null, " Confirm your password!" );
               return false;
         }
        else if (email_id.equals("")){
              JOptionPane.showMessageDialog(null, " You should enter your email!" );
               return false;
         }
        else if (mobilenum.equals("")){
              JOptionPane.showMessageDialog(null, " Your mobile number is needed!" );
              return false;
         }
         
         else if (!password.equals(conpassword)){
             JOptionPane.showMessageDialog(null, "Password and Confirm Password must be same!!");
             return false;
           }
         
         else {
             
             return true;
         }
           
    }
//     public boolean checkUsername(String name){
//        PreparedStatement st;
//        ResultSet rs;
//        boolean name_exist = false;
//             
//        String query = "SELECT * FROM `users` WHERE`Name/Username` =?";
//             
//        try{
//            st = My_Connection.getConnection().prepareStatement(query);
//            st.setString(1, name);
//            rs = st.executeQuery();
//                
//            if(rs.next()){
//                name_exist= true;
//                JOptionPane.showMessageDialog(null, "Username already Exist, choose another name");
//            }
//                
//            } catch (SQLException ex) {
//                Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
//        }
//                return name_exist;
//        }
   
    private void MobilenumKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_MobilenumKeyTyped
        //allow numbers only..
        if(!Character.isDigit(evt.getKeyChar())){
            evt.consume();
        }
    }//GEN-LAST:event_MobilenumKeyTyped

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        
        String name=Name.getText();
        String address=Address.getText();
        String password=String.valueOf(Password.getText());
        String conpassword=String.valueOf(Confirmpassword.getText());
        String email_id=Email_id.getText();
        String mobilenum=Mobilenum.getText();
        String gender= Gender.getText();
        String age= Age.getText();
        
        if (name.trim().equals("") || name.trim().equals("") ||   
            address.trim().equals("") || address.trim().equals("") ||
            password.trim().equals("") ||  password.trim().equals("") ||
            conpassword.trim().equals("") || conpassword.trim().equals("") ||
            email_id.trim().equals("") || email_id.trim().equals("") ||
            mobilenum.trim().equals("") ||  mobilenum.trim().equals("") ||
            gender.trim().equals("") ||  mobilenum.trim().equals("") ||
            age.trim().equals("") ||  mobilenum.trim().equals(""))
                {
                     JOptionPane.showMessageDialog(null, "Other fields are empty!");
        }else if(password.equals(conpassword)){
                        
              } 
        else{
            // if everything is fine..
            
            //check whether the user id is already used or not?
            
            try{
                Connection con=  mycon.getConn();
                String chkEmail="SELECT * 'Name' FROM `users` WHERE `Email_Id`=?";
                //String chkEimails= "select + from users where eamils=?";
                PreparedStatement pst=con.prepareStatement(chkEmail);
                pst.setString(1, email_id);
                ResultSet rs =pst.executeQuery();
                
                if(rs.next()){//id has been taken/...
                    JOptionPane.showMessageDialog(null, "This" +email_id+" Email Id has been already registered!");
                }
                
                
                else{
                    //save user registration...
                    String saveQry="INSERT INTO `users`(`Username`, `Address`, `Password`, `Confirm_Password`, `Email_Id`, `Mobile_Number`, `Gender`, `Age`) VALUES (?,?,?,?,?,?,?,?)";
                    
                    pst=con.prepareStatement(saveQry);
                    pst.setString(1, name);
                    pst.setString(2, address);
                    pst.setString(3, password);
                    pst.setString(4, conpassword);
                    pst.setString(5, email_id);
                    pst.setString(6, age); 
                    pst.setString(7, gender);
                    pst.setString(8, mobilenum);
                        
                    int i=pst.executeUpdate();
                    if(i>1){
                        JOptionPane.showMessageDialog(null, name+"This" +email_id+" User Registration" + "Successful with User id as Email id"+email_id);
                    }
                    else{
                       JOptionPane.showMessageDialog(null, name+"This" +email_id+" User Registration" + "Failed with User id as Email id"+email_id); 
                    }
                   
                }//try

                        
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,"User Not Inserted / Saved Exception e: "+ e);
            }
            
          }
         
         if (name.equals("")){
            JOptionPane.showMessageDialog(null, " You should enter your name!" );
        }
        if (address.equals("")){
            JOptionPane.showMessageDialog(null, " You should enter your address!" );
        }
        if (password.equals("")){
            JOptionPane.showMessageDialog(null, "  Enter your password!" );
        }
        if (conpassword.equals("")){
            JOptionPane.showMessageDialog(null, " Confirm your password!" );
        }
        if (email_id.equals("")){
            JOptionPane.showMessageDialog(null, " You should enter your email!" );
        }
        if (mobilenum.equals("")){
            JOptionPane.showMessageDialog(null, " Your mobile number is needed!" );
        }

        if (password.equals(conpassword)){
        }

        else {

            JOptionPane.showMessageDialog(null, "Password and Confirm Password must be same!!");
            Password.setText("");
            Confirmpassword.setText("");
        }
                
                
                    
                   

////                if(verifyFields())
////                {
////                        if(!checkUsername(name))
////                        {
////                
////                                    PreparedStatement ps;
////                                    ResultSet rs;
////                                    String registeredUserQuery="INSERT INTO `users`(`Email_Id`, `Name/Username`, `Address`, `Password`, `Age`, `Gender`, `Mobile Number`) VALUES (?,?,?,?,?,?,?)";
////                           try {
////                                            String registerUserQuery = null;
////                    
////                                        ps = My_Connection.getConnection().prepareStatement(registerUserQuery);
////                                        ps.setString(1,email_id);
////                                        ps.setString(2,name);
////                                        ps.setString(3,address);
////                                        ps.setString(4,password);
////                                        ps.setString(5,age);
////                                        ps.setString(6,gender);
////                                        ps.setString(7,mobilenum);
////                    
////                                        ps.setNull(6, java.sql.Types.NULL);
////                                        if(ps.executeUpdate() != 0)
////                                        {
////                                                JOptionPane.showMessageDialog(null, " You has been registered" );
////                                            }
////                                        else{
////                                                JOptionPane.showMessageDialog(null, " Error: Check your Information" );
////                                            }
////                                 }  catch (SQLException ex) {
////                                        Logger.getLogger(Register.class.getName()).log(Level.SEVERE, null, ex);
////                                    }
////                           }
////                    }
////
//        if (name.trim().equals("") || name.trim().equals("") ||
//            address.trim().equals("") || address.trim().equals("") ||
//            password.trim().equals("") ||  password.trim().equals("") ||
//            conpassword.trim().equals("") || conpassword.trim().equals("") ||
//            email_id.trim().equals("") || email_id.trim().equals("") ||
//            mobilenum.trim().equals("") ||  mobilenum.trim().equals("") ||
//            gender.trim().equals("") ||  mobilenum.trim().equals("") ||
//            age.trim().equals("") ||  mobilenum.trim().equals(""))
////
//        if (name.equals("")){
//            JOptionPane.showMessageDialog(null, " You should enter your name!" );
//        }
//        if (address.equals("")){
//            JOptionPane.showMessageDialog(null, " You should enter your address!" );
//        }
//        if (password.equals("")){
//            JOptionPane.showMessageDialog(null, "  Enter your password!" );
//        }
//        if (conpassword.equals("")){
//            JOptionPane.showMessageDialog(null, " Confirm your password!" );
//        }
//        if (email_id.equals("")){
//            JOptionPane.showMessageDialog(null, " You should enter your email!" );
//        }
//        if (mobilenum.equals("")){
//            JOptionPane.showMessageDialog(null, " Your mobile number is needed!" );
//        }
//
//        if (password.equals(conpassword)){
//        }
//
//        else {
//
//            JOptionPane.showMessageDialog(null, "Password and Confirm Password must be same!!");
//            Password.setText("");
//            Confirmpassword.setText("");
//        }
////        //cant proceed if not all correct...
////        if(Name.getText().length()<=0 ||
////            Address.getText().length()<=0 ||
////            Password.getText().length()<=0 ||
////            Age.getText().length()<=0 ||
////            Gender.getText().length()<=0 ||
////            Mobilenum.getText().length()<=0 ||
////            Email_id.getText().length()<=0)
////        {
////
////        }  //show the table...
////        else
////        {
////            JOptionPane.showMessageDialog(null, "You are Registered!");
////            new Table(name,address,password,age,gender,mobilenum,email_id).setVisible(true);
////            this.dispose();
////        }
////
    }//GEN-LAST:event_RegisterActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        Table tab = new  Table();
        tab.setVisible(true);
        tab.pack();
        tab.setLocationRelativeTo(null);
        tab.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispose();

    }//GEN-LAST:event_jLabel10MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Register.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Register().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField Address;
    public javax.swing.JTextField Age;
    public javax.swing.JPasswordField Confirmpassword;
    public javax.swing.JTextField Email_id;
    private javax.swing.JTextField Gender;
    public javax.swing.JTextField Mobilenum;
    public javax.swing.JTextField Name;
    public javax.swing.JPasswordField Password;
    private javax.swing.JButton Register;
    private javax.swing.JButton Reset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    // End of variables declaration//GEN-END:variables
}
